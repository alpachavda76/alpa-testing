Java : is an OOPL
	: open source  : free to installation , updation
	:case sensitive
==================================
History :  Before java : OAK : 1991 : James Goasling : single user: Console base App
	:Renamed  java from OAK : 1995 : James Goasling : multi user : console app , desktop app

1) J2SE : Java 2 Standard Edition : Core Java
2) J2EE : Java 2 Enterprise Edition: Adv.java
3) Framework : Hibernate & spring 
==============================================================
Java Features
=============
1) simple :
2) OO : 
3) Interpreter : JVM : B -> M
4) Robust : 
5) Secure : 
6) Dynamic : 
7) High Performance : 
8) MultiThreading : 
9) Platform indendent : 
10) portable
==================================================================
Editor :Notepad , Notepad ++

IDE : Eclipse, netbeans, IntellJ
==================================================================
Variable : is nothing but to store the value in particular given in some space
	: its used identifier
	1) can not start with digit in variable
	2) can not start with any special character except(_)
	3) followed with digit 
	4) can not used as a reserved keyword as a variable name
	5) can not used white space between variable

Data type : to reserved the memory for storing some value in variable i.e
	: which type of value you want to store in variable that type you mention before the variable
	there are mainly 2 types

1) primitive : fixed size of the data type size
	1. numeric :
		1.Integeral point : int, byte, char,long etc...
		2.floating point : float , double
	2.non numeric : return, boolean

2) non primitive : there is no any fixed size 
	class, interface,  array etc..

=============================================================
TypeConversion : from one data type to another data type conversion mechanism i.e
	1. implicit : automatic : small datatype size convert into bigger data typesize

	2. explicit :type casting: bigger data type convert into smaller data type size

===================================
Condition : 
	
1) if : if the condition is true then your if block will be performed otherwise nothing

2) if else :if the condition is true then your if block will be performed otherwise else block will execute

3) nested if :  

4) else if ladder
===========================================
Looping : Iteration

1) entry control loop
	1. for, while
2) exit control loop
	1. do while
==============================================================

OOPS : Object Oriented Programming Language Systems
--------------------------------------------------------
1) class : is an collection of data member(Variables) and member functions (process,methods) with its behavior

2) object : its an instances of an class
	:to create memory for that class to access the properties of an class except private

3) encapsulation : data hiding : wrapping up of data into single unit i.e.
	:private with your data member and member function
===============================================
Constructor : is a special member function because its same name as a class name
	:it does not return any value even void
	: can be overloaded
	: to initialize some value in at your proper area
	: when you create object at that time to call constrctor
	: every constrctor having to create object its must be

	: there are mainly 2 types
	1) default : does not have any arguments in the constructor	

	2) parameterized : may have one or more arguments in the constructor

array : is an group of elements which can store multiple value in single variable/object with same data type
	: [] or subscript : default symbol 
	:index start from 0
	:length = size - 1
	: due to array java is not an pure oops because we are creating here object of data type
	:there are mainly 2 types
	1) one dimentional  :  [] : only one loop is used

	2)two or more dimentional : [][] or [][][] : loop with in loop used
	
	3) Jagged Array or Ragged Array : Array with in Array
		:row size is fixed but column is empty
		:every row has different column i.e.
		:its same as 2d array
1 2 3 4 5
1 2
1 2 3 4
		

Scanner  : when you want to get the value from the user at that time we are using scanner class
	: its also derived from java.util package
	: you must be passed one argument (System.in)
	int	=>	nextInt()
	float	=>	nextFloat()
	double	=>	nextDouble()
	word	=> 	next()
	line	=> 	nextLine();

==================================================================================
4) inheritance : 


5) polymorphism : 
	
	2) Method overriding : the whole signature of the method shold be same in a super class as well as in subclass behaviors(body part) are different
===============================================================================
Keywords : 
===========
1) abstract : data hiding : only essential part should be display rest of the data will be hide
	1) using with class : we can not create object of that class
		:must inherit your abstract class into another class

	2) using with method : do not specify body part
		:must be your class also abstract	
		:to override your method into your child class

2) final : constant  at value side
	1) using with variable :constant  at value side
		:at declaration time must be assign the value
		:at runtime or compile time do not change the value
		
	2) using with class : opp of abstract class

	3) using with method : opp of abstract method

3) static : Constant  at memory side : call by ref
	1)using with variable : opp of final variable

	2)using with method : always contain only static member/variable
		:always called with classname

4) interface : is just same like class
	:to hide your pure data
	: we can not create object of interface just only create reference
	: all variables are static or final by default
	: all methods are abstract by  default
	: if you inherit from interface to class so must used "implements" keyword
	: main purpose is to resolved the problem of multiple inheritance

5) this : current class refernce
	: when class variable and argument variables both are same name at that time to used this keyword for seprate your class member

===========================================================================

Common Classes
================
1) String : immutable : we can not changed in string
	:its has so many methods 
	
2) StringBuffer : mutable : we can changed

3) Wrapper : type conversion mechanism : from class to primitive data type conversion i.e.
		primitive Data type		Wrapper Classes
			int			Integer
			float			Float
			double			Double
			long			Long

	there are mainly used in 3 way
	1) Autoboxing : direct value convert into object

	2) Boxing : variable to object

	3) UnBoxing : object to variable

4) Object : its an root class in java 
	:its has so many properties 
	:must inherit into user defined class or system defined class
===========================================================================
Exception Handling: java.lang package : default package
-------------------
	:Exception is an error wthich you want to handled by your Exception Class
	:when its create its create from abnormal condition
	:Exception is an root class of all other exceptin classes
	:there are 2 tyeps of 
	1) Compile Time : Checked Exception : ;,"' spelling mistake etc..
	2) Run time :UnChecked Exception : arithmatic , arrayindexoutofbound..etc...

	3) error : same as runtime exception : developer mistake, programmer mistake etc..

there are mainly 5 keywords
1) try : to find the error from the try block
	:when you find the error from the block that line to remaining line are skipped in only block
	: followed with catch , finally or both
	:which error found from the block that error throw to catch block

2) catch : whatever errror thrown by try block so that error handled by catch block with appropriate class
	:catch can be multiple

3) finally : if error will come or not but finally block will perform
4) throw : when you want to create user defined exception / custom exception
	:throw always written into some methods
	:throw always followed with new keyword and also with custome exception class constructor

5) throws :when some try catch you did not want to used inside the code so throws your exception class written after method declaration
	:multiple exception also written by using ","

ATM :
Balance : 2000
deposit :2000
withdrawal :5000

op": if you enter 3000 rs more into your account then your withdrawal 5000 rs
============================================================================================
File IO : to store data as an permentnt medium
	:excel, .txt, doc, etc...
	:import java.io. package
	:common exception  : FileNotFound Exception , IOException etc..

Stream :  medium or device 
	
1) ByteStream : all data mechanism like byte base
		:1 character per byte
	1) InputStream : to read the data from file
		1.FileInputStream

	2) OutputStream : to write the data into file
		1.FileOutputStream

2) Character Stream : all data mechanism like unicode character base
		:1 character per 2 byte

	1) Reader :to read the data from file
		:FileReader

	2) Writer :: to write the data into file
		FileWriter
=======================================================================
File has 3 operation

1) to open the file in your appropriate class
2) to read/write the data into/from the file
3) to close the file connection
===============================================================================================

Collection :to collect more than one object/value into single object with all data type value
	: it has so many interfaces or so many classes
	:its required java.util package

interface :
1) List
2) Set
3) Map
4) Iterator : to fetch the value from the collection object
	1) to get all value from the collection object and assign to iterator ref/obj
	2) to use loop for seprate value
	3) to go into next value/obj to display all 

5) Enumeration: to fetch the value from the collection object
	1) to get all value from the collection object and assign to enumeration ref/obj
	2) to use loop for seprate value
	3) to go into next value/obj to display all 

classes :

1) ArrayList : its implements List Interface automatically
	:its automatically shrink and grow both
	: default size is 0
	:duplicate values are allow
	:add() and remove() 
	:its represent like dynamic array
	:when you add some value/object in it so same way display all value in list
	:symbol is... : []
2) HashSet : its implements Set Interface automatically
	:its automatically shrink and grow both
	: default size is 0
	:duplicate values are not allow
	:add() and remove() 
	:its represent like dynamic array
	: each value/object having hashkey
	:all hashkey convert into hashcode
	:and every value display via hashcode wise
	:symbol is... : []
3) HashMap : its implements Map interface automatically
	:its automatically shrink and grow both
	: default size is 0
	:duplicate Pair<k,v> are not allow
	:get(),put()
	:its represent like dynamic array
	: each pair<k,v> having hashkey
	:all hashkey convert into hashcode
	:and every pari display via hashcode wise
	:symbol is... : {}
4) Vector : : its implements List Interface automatically
	:its automatically shrink and grow both
	: default size is 0
	:default capacity is 10
	:resize your capacity 
	:duplicate values are allow
	:add() and remove() , addElement() , removeElement()
	:its represent like dynamic array
	:when you add some value/object in it so same way display all value in list
	:symbol is... : []

5) Generics :<E> : means any class (userdefined or system)
	:you can generalized your class with collection for specific reason
================================================================================





